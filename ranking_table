class Ranking
  attr_reader :results

  def initialize
    @results = {}
    read_file
    print_results
  end

  def read_file
    fname = 'input_sample'
    File.readlines(fname).each do |line|
      get_result(line)
    end
  end

  def get_result(str)
    team1, team2 = str.chomp.split(", ")
    score1 = team1.scan(/\d+/)[0]
    score2 = team2.scan(/\d+/)[0]
    team1_name = team1.chomp(score1).strip
    team2_name = team2.chomp(score2).strip
    if score1 > score2
      @results.has_key?(team1_name) ? @results[team1_name] += 3 : @results[team1_name] = 3
      @results.has_key?(team2_name) ? @results[team2_name] += 0 : @results[team2_name] = 0
    elsif score1 < score2
      @results.has_key?(team2_name) ? @results[team2_name] += 3 : @results[team2_name] = 3
      @results.has_key?(team1_name) ? @results[team1_name] += 0 : @results[team1_name] = 0
    elsif score1 == score2
      @results.has_key?(team1_name) ? @results[team1_name] += 1 : @results[team1_name] = 1
      @results.has_key?(team2_name) ? @results[team2_name] += 1 : @results[team2_name] = 1
    end
  end

  def print_results
    num = 0
    @results.sort_by{|_key, value| value}.reverse.each do |team, score|
      num += 1
      puts score > 1 ? "#{num}. #{team}, #{score}pts" : "#{num}. #{team}, #{score}pt"
    end
  end
end
run = Ranking.new
